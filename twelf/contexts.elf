ctx : type.
%name ctx G.

% open terms
otm : ctx -> type.

ctx/nil : ctx.
%abbrev 路 = ctx/nil.

ctx/snoc : {G:ctx} otm G -> ctx.
%abbrev , = ctx/snoc. %infix left 9 ,.

! : tm -> otm 路. %prefix 10 !.
@ : (tm -> otm G) -> otm (G , A). %prefix 10 @.
%abbrev @' = ([M] @ [x] M) : otm G -> otm (G , A). %prefix 10 @.

% closed terms may be weakened
weaken : {G:ctx} tm -> otm G -> type.
%abbrev wk = weaken G.
%mode weaken +G +M -O.
weaken/路 : weaken 路 M (! M).
weaken/, : weaken (G , A) M (@ [x] M')
            <- weaken G M M'.
%worlds () (weaken _ _ _).
%total G (weaken G _ _).
